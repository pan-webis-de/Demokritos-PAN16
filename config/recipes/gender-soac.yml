pipeline:
  label: english
  estimator: Pipeline
  estimator_pkg: sklearn.pipeline
  estimator_params:
    steps:
      - preprocess
      #- clean html
      #- detwittify
      - label: features
        estimator: FeatureUnion
        estimator_pkg: sklearn.pipeline
        estimator_params:
          transformer_list:
            #- count 3grams tfidf
            #- count tokens
            #- twcnb
            #- skLDA
            #- skNMF
            #- LDA
            #- soa_model
            - soac_model
            #- lsi_model
      #- dtree
      - svm
      #- xgboost
      #- max soa
      #- ada
      #- mvb


############## PREPROCESSING ###################

# html cleaner:
#   label: clean html
#   estimator: clean_html
#   estimator_pkg: pan.preprocess

# detwittifier:
#   label: detwittify
#   estimator: detwittify
#   estimator_pkg: pan.preprocess

preprocess:
  label: preprocess
  estimator: preprocess
  estimator_pkg: pan.preprocess  

############ FEATURE TRANSFORMATIONS ######################



# count tokens:
#   label: count tokens
#   estimator: CountTokens
#   estimator_pkg: pan.features


# tfidf:
#   label: count 3grams tfidf
#   estimator: TfidfVectorizer
#   estimator_pkg: sklearn.feature_extraction.text
#   estimator_params:
#     analyzer: char
#     ngram_range: [3, 3]


# soa:
#   label: soa_model
#   estimator: SOA_Model2
#   estimator_pkg: pan.features
#   estimator_params:
#     max_df: 1.0
#     min_df: 5
#     tokenizer_var: 'sklearn'
#     max_features: None

soac:
  label: soac_model
  estimator: SOAC_Model2
  estimator_pkg: pan.features
  estimator_params:
    max_df: 1.0
    min_df: 1
    tokenizer_var: 'sklearn'
    max_features: None


# twcnb:
#   label: twcnb
#   estimator: TWCNB
#   estimator_pkg: pan.features
#   estimator_params:
#     max_df: 1.0
#     min_df: 5
#     max_features: 5000

# skNMF:
#   label: skNMF
#   estimator: skNMF
#   estimator_pkg: pan.features
#   estimator_params:
#     n_components: 100
#     random_state: 42
#     verbose: 1

# skLDA:
#   label: skLDA
#   estimator: skLDA
#   estimator_pkg: pan.features
#   estimator_params:
#     n_topics: 50
#     verbose: 1
#     random_state: 100

# lsi:
#   label: lsi_model
#   estimator: LSI_Model
#   estimator_pkg: pan.features
#   estimator_params:
#     num_topics: 200


# LDA:
#   label: LDA
#   estimator: LDA
#   estimator_pkg: pan.features
#   estimator_params:
#     num_topics: 150
#     lib: 'sklearn'

####################### PREDICTOR ######################



# mvb:
#   label: mvb
#   estimator: MultinomialNB
#   estimator_pkg: sklearn.naive_bayes
#   estimator_params:
#     alpha: 1

# adaensemble:
#   label: ada
#   estimator: AdaBoostClassifier
#   estimator_pkg: sklearn.ensemble
#   estimator_params:
#     n_estimators: 100

# decision:
#   label: dtree
#   estimator: DecisionTreeClassifier
#   estimator_pkg: sklearn.tree
#   estimator_params:
#     class_weight: 'balanced'


# max soa:
#   label: max soa
#   estimator: SOA_Predict
#   estimator_pkg: pan.features

# xgboost:
#   label: xgboost
#   estimator: XGBoostClassifier
#   estimator_pkg: pan.features
#   estimator_params:
#     num_boost_round: 10

# svm:
#   label: svm
#   estimator: LinearSVC
#   estimator_pkg: sklearn.svm
#   estimator_params:
#     C: 0.01
#     class_weight: 'balanced'

svm:
  label: svm
  estimator: SVC
  estimator_pkg: sklearn.svm
  estimator_params:
    kernel: linear
    # C: 1 gia SOA + PAN15
    C: 0.1
    probability: True
    # 1 or 10 for SOA
    gamma: 1 
    class_weight: 'balanced'

############# GRID PARAMS $$$$$$$$$$$$$$$$$$$$$$$$$

# grid_params:
#   - features__LDA__lib: ['gensim', 'sklearn']
#     features__LDA__num_topics: [30, 60, 90, 120, 150]
#     svm__C: [0.01, 0.1, 1, 10, 100, 1000]
 #- features__twcnb__max_df: [1.0, 0.9, 0.8]
 #  features__twcnb__min_df: [1, 5, 10]
 #  features__twcnb__max_features: [None, 10000, 15000]
  # - svm__C: [0.01, 0.1, 1, 10, 100]
#     svm__kernel: [linear]
#     svm__class_weight: [auto, null]
#     3grams__max_features:  [1000, 3000, 5000, 7500, 10000, null]
 # - svm__C: [0.001, 0.01, 0.1, 1, 10, 100, 1000]
 #   features__lsi_model__num_topics: [25,50,100, 150, 200, 300]
#     svm__kernel: [rbf, sigmoid]
#     svm__gamma: [0.001, 0.01, 0.1, 1, 10, 100, 1000]
#     svm__class_weight: [auto, null]
#     3grams__max_features:  [1000, 3000, 5000, 7500, 10000, null]


##################### PRINTERS #################

# printer:
#   label: printer
#   estimator: PrintLen
#   estimator_pkg: pan.features
